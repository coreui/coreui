{"version":3,"file":"button.js","sources":["../src/util/index.js","../src/button.js"],"sourcesContent":["/**\r\n * --------------------------------------------------------------------------\r\n * Bootstrap (v5.0.0-alpha1): util/index.js\r\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\r\n * --------------------------------------------------------------------------\r\n */\r\n\r\nconst MAX_UID = 1000000\r\nconst MILLISECONDS_MULTIPLIER = 1000\r\nconst TRANSITION_END = 'transitionend'\r\n\r\n// Shoutout AngusCroll (https://goo.gl/pxwQGp)\r\nconst toType = obj => {\r\n  if (obj === null || obj === undefined) {\r\n    return `${obj}`\r\n  }\r\n\r\n  return {}.toString.call(obj).match(/\\s([a-z]+)/i)[1].toLowerCase()\r\n}\r\n\r\n/**\r\n * --------------------------------------------------------------------------\r\n * Public Util Api\r\n * --------------------------------------------------------------------------\r\n */\r\n\r\nconst getUID = prefix => {\r\n  do {\r\n    prefix += Math.floor(Math.random() * MAX_UID)\r\n  } while (document.getElementById(prefix))\r\n\r\n  return prefix\r\n}\r\n\r\nconst getSelector = element => {\r\n  let selector = element.getAttribute('data-target')\r\n\r\n  if (!selector || selector === '#') {\r\n    const hrefAttr = element.getAttribute('href')\r\n\r\n    selector = hrefAttr && hrefAttr !== '#' ? hrefAttr.trim() : null\r\n  }\r\n\r\n  return selector\r\n}\r\n\r\nconst getSelectorFromElement = element => {\r\n  const selector = getSelector(element)\r\n\r\n  if (selector) {\r\n    return document.querySelector(selector) ? selector : null\r\n  }\r\n\r\n  return null\r\n}\r\n\r\nconst getElementFromSelector = element => {\r\n  const selector = getSelector(element)\r\n\r\n  return selector ? document.querySelector(selector) : null\r\n}\r\n\r\nconst getTransitionDurationFromElement = element => {\r\n  if (!element) {\r\n    return 0\r\n  }\r\n\r\n  // Get transition-duration of the element\r\n  let {\r\n    transitionDuration,\r\n    transitionDelay\r\n  } = window.getComputedStyle(element)\r\n\r\n  const floatTransitionDuration = parseFloat(transitionDuration)\r\n  const floatTransitionDelay = parseFloat(transitionDelay)\r\n\r\n  // Return 0 if element or transition duration is not found\r\n  if (!floatTransitionDuration && !floatTransitionDelay) {\r\n    return 0\r\n  }\r\n\r\n  // If multiple durations are defined, take the first\r\n  transitionDuration = transitionDuration.split(',')[0]\r\n  transitionDelay = transitionDelay.split(',')[0]\r\n\r\n  return (parseFloat(transitionDuration) + parseFloat(transitionDelay)) * MILLISECONDS_MULTIPLIER\r\n}\r\n\r\nconst triggerTransitionEnd = element => {\r\n  element.dispatchEvent(new Event(TRANSITION_END))\r\n}\r\n\r\nconst isElement = obj => (obj[0] || obj).nodeType\r\n\r\nconst emulateTransitionEnd = (element, duration) => {\r\n  let called = false\r\n  const durationPadding = 5\r\n  const emulatedDuration = duration + durationPadding\r\n  function listener() {\r\n    called = true\r\n    element.removeEventListener(TRANSITION_END, listener)\r\n  }\r\n\r\n  element.addEventListener(TRANSITION_END, listener)\r\n  setTimeout(() => {\r\n    if (!called) {\r\n      triggerTransitionEnd(element)\r\n    }\r\n  }, emulatedDuration)\r\n}\r\n\r\nconst typeCheckConfig = (componentName, config, configTypes) => {\r\n  Object.keys(configTypes)\r\n    .forEach(property => {\r\n      const expectedTypes = configTypes[property]\r\n      const value = config[property]\r\n      const valueType = value && isElement(value) ?\r\n        'element' :\r\n        toType(value)\r\n\r\n      if (!new RegExp(expectedTypes).test(valueType)) {\r\n        throw new Error(\r\n          `${componentName.toUpperCase()}: ` +\r\n          `Option \"${property}\" provided type \"${valueType}\" ` +\r\n          `but expected type \"${expectedTypes}\".`)\r\n      }\r\n    })\r\n}\r\n\r\nconst isVisible = element => {\r\n  if (!element) {\r\n    return false\r\n  }\r\n\r\n  if (element.style && element.parentNode && element.parentNode.style) {\r\n    const elementStyle = getComputedStyle(element)\r\n    const parentNodeStyle = getComputedStyle(element.parentNode)\r\n\r\n    return elementStyle.display !== 'none' &&\r\n      parentNodeStyle.display !== 'none' &&\r\n      elementStyle.visibility !== 'hidden'\r\n  }\r\n\r\n  return false\r\n}\r\n\r\nconst findShadowRoot = element => {\r\n  if (!document.documentElement.attachShadow) {\r\n    return null\r\n  }\r\n\r\n  // Can find the shadow root otherwise it'll return the document\r\n  if (typeof element.getRootNode === 'function') {\r\n    const root = element.getRootNode()\r\n    return root instanceof ShadowRoot ? root : null\r\n  }\r\n\r\n  if (element instanceof ShadowRoot) {\r\n    return element\r\n  }\r\n\r\n  // when we don't find a shadow root\r\n  if (!element.parentNode) {\r\n    return null\r\n  }\r\n\r\n  return findShadowRoot(element.parentNode)\r\n}\r\n\r\nconst noop = () => function () {}\r\n\r\nconst reflow = element => element.offsetHeight\r\n\r\nconst getjQuery = () => {\r\n  const { jQuery } = window\r\n\r\n  if (jQuery && !document.body.hasAttribute('data-no-jquery')) {\r\n    return jQuery\r\n  }\r\n\r\n  return null\r\n}\r\n\r\nexport {\r\n  getjQuery,\r\n  TRANSITION_END,\r\n  getUID,\r\n  getSelectorFromElement,\r\n  getElementFromSelector,\r\n  getTransitionDurationFromElement,\r\n  triggerTransitionEnd,\r\n  isElement,\r\n  emulateTransitionEnd,\r\n  typeCheckConfig,\r\n  isVisible,\r\n  findShadowRoot,\r\n  noop,\r\n  reflow\r\n}\r\n","/**\r\n * --------------------------------------------------------------------------\r\n * CoreUI (v3.2.0): button.js\r\n * Licensed under MIT (https://coreui.io/license)\r\n *\r\n * This component is a modified version of the Bootstrap's buttons.js\r\n * Bootstrap (v5.0.0): buttons.js\r\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\r\n * --------------------------------------------------------------------------\r\n */\r\n\r\nimport { getjQuery } from './util/index'\r\nimport Data from './dom/data'\r\nimport EventHandler from './dom/event-handler'\r\nimport SelectorEngine from './dom/selector-engine'\r\n\r\n/**\r\n * ------------------------------------------------------------------------\r\n * Constants\r\n * ------------------------------------------------------------------------\r\n */\r\n\r\nconst NAME = 'button'\r\nconst VERSION = '3.2.0'\r\nconst DATA_KEY = 'coreui.button'\r\nconst EVENT_KEY = `.${DATA_KEY}`\r\nconst DATA_API_KEY = '.data-api'\r\n\r\nconst CLASS_NAME_ACTIVE = 'active'\r\nconst CLASS_NAME_DISABLED = 'disabled'\r\nconst CLASS_NAME_FOCUS = 'focus'\r\n\r\nconst SELECTOR_DATA_TOGGLE_CARROT = '[data-toggle^=\"button\"]'\r\nconst SELECTOR_DATA_TOGGLE = '[data-toggle=\"buttons\"]'\r\nconst SELECTOR_INPUT = 'input:not([type=\"hidden\"])'\r\nconst SELECTOR_ACTIVE = '.active'\r\nconst SELECTOR_BUTTON = '.btn'\r\n\r\nconst EVENT_CLICK_DATA_API = `click${EVENT_KEY}${DATA_API_KEY}`\r\nconst EVENT_FOCUS_DATA_API = `focus${EVENT_KEY}${DATA_API_KEY}`\r\nconst EVENT_BLUR_DATA_API = `blur${EVENT_KEY}${DATA_API_KEY}`\r\n\r\n/**\r\n * ------------------------------------------------------------------------\r\n * Class Definition\r\n * ------------------------------------------------------------------------\r\n */\r\n\r\nclass Button {\r\n  constructor(element) {\r\n    this._element = element\r\n    Data.setData(element, DATA_KEY, this)\r\n  }\r\n\r\n  // Getters\r\n\r\n  static get VERSION() {\r\n    return VERSION\r\n  }\r\n\r\n  // Public\r\n\r\n  toggle() {\r\n    let triggerChangeEvent = true\r\n    let addAriaPressed = true\r\n\r\n    const rootElement = this._element.closest(SELECTOR_DATA_TOGGLE)\r\n\r\n    if (rootElement) {\r\n      const input = SelectorEngine.findOne(SELECTOR_INPUT, this._element)\r\n\r\n      if (input && input.type === 'radio') {\r\n        if (input.checked &&\r\n          this._element.classList.contains(CLASS_NAME_ACTIVE)) {\r\n          triggerChangeEvent = false\r\n        } else {\r\n          const activeElement = SelectorEngine.findOne(SELECTOR_ACTIVE, rootElement)\r\n\r\n          if (activeElement) {\r\n            activeElement.classList.remove(CLASS_NAME_ACTIVE)\r\n          }\r\n        }\r\n\r\n        if (triggerChangeEvent) {\r\n          if (input.hasAttribute('disabled') ||\r\n            rootElement.hasAttribute('disabled') ||\r\n            input.classList.contains(CLASS_NAME_DISABLED) ||\r\n            rootElement.classList.contains(CLASS_NAME_DISABLED)) {\r\n            return\r\n          }\r\n\r\n          input.checked = !this._element.classList.contains(CLASS_NAME_ACTIVE)\r\n          EventHandler.trigger(input, 'change')\r\n        }\r\n\r\n        input.focus()\r\n        addAriaPressed = false\r\n      }\r\n    }\r\n\r\n    if (addAriaPressed) {\r\n      this._element.setAttribute('aria-pressed',\r\n        !this._element.classList.contains(CLASS_NAME_ACTIVE))\r\n    }\r\n\r\n    if (triggerChangeEvent) {\r\n      this._element.classList.toggle(CLASS_NAME_ACTIVE)\r\n    }\r\n  }\r\n\r\n  dispose() {\r\n    Data.removeData(this._element, DATA_KEY)\r\n    this._element = null\r\n  }\r\n\r\n  // Static\r\n\r\n  static jQueryInterface(config) {\r\n    return this.each(function () {\r\n      let data = Data.getData(this, DATA_KEY)\r\n\r\n      if (!data) {\r\n        data = new Button(this)\r\n      }\r\n\r\n      if (config === 'toggle') {\r\n        data[config]()\r\n      }\r\n    })\r\n  }\r\n\r\n  static getInstance(element) {\r\n    return Data.getData(element, DATA_KEY)\r\n  }\r\n}\r\n\r\n/**\r\n * ------------------------------------------------------------------------\r\n * Data Api implementation\r\n * ------------------------------------------------------------------------\r\n */\r\n\r\nEventHandler.on(document, EVENT_CLICK_DATA_API, SELECTOR_DATA_TOGGLE_CARROT, event => {\r\n  event.preventDefault()\r\n\r\n  const button = event.target.closest(SELECTOR_BUTTON)\r\n\r\n  let data = Data.getData(button, DATA_KEY)\r\n  if (!data) {\r\n    data = new Button(button)\r\n  }\r\n\r\n  data.toggle()\r\n})\r\n\r\nEventHandler.on(document, EVENT_FOCUS_DATA_API, SELECTOR_DATA_TOGGLE_CARROT, event => {\r\n  const button = event.target.closest(SELECTOR_BUTTON)\r\n\r\n  if (button) {\r\n    button.classList.add(CLASS_NAME_FOCUS)\r\n  }\r\n})\r\n\r\nEventHandler.on(document, EVENT_BLUR_DATA_API, SELECTOR_DATA_TOGGLE_CARROT, event => {\r\n  const button = event.target.closest(SELECTOR_BUTTON)\r\n\r\n  if (button) {\r\n    button.classList.remove(CLASS_NAME_FOCUS)\r\n  }\r\n})\r\n\r\nconst $ = getjQuery()\r\n\r\n/**\r\n * ------------------------------------------------------------------------\r\n * jQuery\r\n * ------------------------------------------------------------------------\r\n * add .button to jQuery only if jQuery is present\r\n */\r\n/* istanbul ignore if */\r\nif ($) {\r\n  const JQUERY_NO_CONFLICT = $.fn[NAME]\r\n  $.fn[NAME] = Button.jQueryInterface\r\n  $.fn[NAME].Constructor = Button\r\n\r\n  $.fn[NAME].noConflict = () => {\r\n    $.fn[NAME] = JQUERY_NO_CONFLICT\r\n    return Button.jQueryInterface\r\n  }\r\n}\r\n\r\nexport default Button\r\n"],"names":["getjQuery","window","jQuery","document","body","hasAttribute","NAME","VERSION","DATA_KEY","EVENT_KEY","DATA_API_KEY","CLASS_NAME_ACTIVE","CLASS_NAME_DISABLED","CLASS_NAME_FOCUS","SELECTOR_DATA_TOGGLE_CARROT","SELECTOR_DATA_TOGGLE","SELECTOR_INPUT","SELECTOR_ACTIVE","SELECTOR_BUTTON","EVENT_CLICK_DATA_API","EVENT_FOCUS_DATA_API","EVENT_BLUR_DATA_API","Button","element","_element","Data","setData","toggle","triggerChangeEvent","addAriaPressed","rootElement","closest","input","SelectorEngine","findOne","type","checked","classList","contains","activeElement","remove","EventHandler","trigger","focus","setAttribute","dispose","removeData","jQueryInterface","config","each","data","getData","getInstance","on","event","preventDefault","button","target","add","$","JQUERY_NO_CONFLICT","fn","Constructor","noConflict"],"mappings":"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"}