{"version":3,"file":"scrollspy.js","sources":["../src/util/index.js","../src/scrollspy.js"],"sourcesContent":["/**\r\n * --------------------------------------------------------------------------\r\n * Bootstrap (v5.0.0-alpha1): util/index.js\r\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\r\n * --------------------------------------------------------------------------\r\n */\r\n\r\nconst MAX_UID = 1000000\r\nconst MILLISECONDS_MULTIPLIER = 1000\r\nconst TRANSITION_END = 'transitionend'\r\n\r\n// Shoutout AngusCroll (https://goo.gl/pxwQGp)\r\nconst toType = obj => {\r\n  if (obj === null || obj === undefined) {\r\n    return `${obj}`\r\n  }\r\n\r\n  return {}.toString.call(obj).match(/\\s([a-z]+)/i)[1].toLowerCase()\r\n}\r\n\r\n/**\r\n * --------------------------------------------------------------------------\r\n * Public Util Api\r\n * --------------------------------------------------------------------------\r\n */\r\n\r\nconst getUID = prefix => {\r\n  do {\r\n    prefix += Math.floor(Math.random() * MAX_UID)\r\n  } while (document.getElementById(prefix))\r\n\r\n  return prefix\r\n}\r\n\r\nconst getSelector = element => {\r\n  let selector = element.getAttribute('data-target')\r\n\r\n  if (!selector || selector === '#') {\r\n    const hrefAttr = element.getAttribute('href')\r\n\r\n    selector = hrefAttr && hrefAttr !== '#' ? hrefAttr.trim() : null\r\n  }\r\n\r\n  return selector\r\n}\r\n\r\nconst getSelectorFromElement = element => {\r\n  const selector = getSelector(element)\r\n\r\n  if (selector) {\r\n    return document.querySelector(selector) ? selector : null\r\n  }\r\n\r\n  return null\r\n}\r\n\r\nconst getElementFromSelector = element => {\r\n  const selector = getSelector(element)\r\n\r\n  return selector ? document.querySelector(selector) : null\r\n}\r\n\r\nconst getTransitionDurationFromElement = element => {\r\n  if (!element) {\r\n    return 0\r\n  }\r\n\r\n  // Get transition-duration of the element\r\n  let {\r\n    transitionDuration,\r\n    transitionDelay\r\n  } = window.getComputedStyle(element)\r\n\r\n  const floatTransitionDuration = parseFloat(transitionDuration)\r\n  const floatTransitionDelay = parseFloat(transitionDelay)\r\n\r\n  // Return 0 if element or transition duration is not found\r\n  if (!floatTransitionDuration && !floatTransitionDelay) {\r\n    return 0\r\n  }\r\n\r\n  // If multiple durations are defined, take the first\r\n  transitionDuration = transitionDuration.split(',')[0]\r\n  transitionDelay = transitionDelay.split(',')[0]\r\n\r\n  return (parseFloat(transitionDuration) + parseFloat(transitionDelay)) * MILLISECONDS_MULTIPLIER\r\n}\r\n\r\nconst triggerTransitionEnd = element => {\r\n  element.dispatchEvent(new Event(TRANSITION_END))\r\n}\r\n\r\nconst isElement = obj => (obj[0] || obj).nodeType\r\n\r\nconst emulateTransitionEnd = (element, duration) => {\r\n  let called = false\r\n  const durationPadding = 5\r\n  const emulatedDuration = duration + durationPadding\r\n  function listener() {\r\n    called = true\r\n    element.removeEventListener(TRANSITION_END, listener)\r\n  }\r\n\r\n  element.addEventListener(TRANSITION_END, listener)\r\n  setTimeout(() => {\r\n    if (!called) {\r\n      triggerTransitionEnd(element)\r\n    }\r\n  }, emulatedDuration)\r\n}\r\n\r\nconst typeCheckConfig = (componentName, config, configTypes) => {\r\n  Object.keys(configTypes)\r\n    .forEach(property => {\r\n      const expectedTypes = configTypes[property]\r\n      const value = config[property]\r\n      const valueType = value && isElement(value) ?\r\n        'element' :\r\n        toType(value)\r\n\r\n      if (!new RegExp(expectedTypes).test(valueType)) {\r\n        throw new Error(\r\n          `${componentName.toUpperCase()}: ` +\r\n          `Option \"${property}\" provided type \"${valueType}\" ` +\r\n          `but expected type \"${expectedTypes}\".`)\r\n      }\r\n    })\r\n}\r\n\r\nconst isVisible = element => {\r\n  if (!element) {\r\n    return false\r\n  }\r\n\r\n  if (element.style && element.parentNode && element.parentNode.style) {\r\n    const elementStyle = getComputedStyle(element)\r\n    const parentNodeStyle = getComputedStyle(element.parentNode)\r\n\r\n    return elementStyle.display !== 'none' &&\r\n      parentNodeStyle.display !== 'none' &&\r\n      elementStyle.visibility !== 'hidden'\r\n  }\r\n\r\n  return false\r\n}\r\n\r\nconst findShadowRoot = element => {\r\n  if (!document.documentElement.attachShadow) {\r\n    return null\r\n  }\r\n\r\n  // Can find the shadow root otherwise it'll return the document\r\n  if (typeof element.getRootNode === 'function') {\r\n    const root = element.getRootNode()\r\n    return root instanceof ShadowRoot ? root : null\r\n  }\r\n\r\n  if (element instanceof ShadowRoot) {\r\n    return element\r\n  }\r\n\r\n  // when we don't find a shadow root\r\n  if (!element.parentNode) {\r\n    return null\r\n  }\r\n\r\n  return findShadowRoot(element.parentNode)\r\n}\r\n\r\nconst noop = () => function () {}\r\n\r\nconst reflow = element => element.offsetHeight\r\n\r\nconst getjQuery = () => {\r\n  const { jQuery } = window\r\n\r\n  if (jQuery && !document.body.hasAttribute('data-no-jquery')) {\r\n    return jQuery\r\n  }\r\n\r\n  return null\r\n}\r\n\r\nexport {\r\n  getjQuery,\r\n  TRANSITION_END,\r\n  getUID,\r\n  getSelectorFromElement,\r\n  getElementFromSelector,\r\n  getTransitionDurationFromElement,\r\n  triggerTransitionEnd,\r\n  isElement,\r\n  emulateTransitionEnd,\r\n  typeCheckConfig,\r\n  isVisible,\r\n  findShadowRoot,\r\n  noop,\r\n  reflow\r\n}\r\n","/**\r\n * --------------------------------------------------------------------------\r\n * CoreUI (v3.2.0): scrollspy.js\r\n * Licensed under MIT (https://coreui.io/license)\r\n *\r\n * This component is a modified version of the Bootstrap's scrollspy.js\r\n * Bootstrap (v5.0.0): scrollspy.js\r\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\r\n * --------------------------------------------------------------------------\r\n */\r\n\r\nimport {\r\n  getjQuery,\r\n  getSelectorFromElement,\r\n  getUID,\r\n  isElement,\r\n  typeCheckConfig\r\n} from './util/index'\r\nimport Data from './dom/data'\r\nimport EventHandler from './dom/event-handler'\r\nimport Manipulator from './dom/manipulator'\r\nimport SelectorEngine from './dom/selector-engine'\r\n\r\n/**\r\n * ------------------------------------------------------------------------\r\n * Constants\r\n * ------------------------------------------------------------------------\r\n */\r\n\r\nconst NAME = 'scrollspy'\r\nconst VERSION = '3.2.0'\r\nconst DATA_KEY = 'coreui.scrollspy'\r\nconst EVENT_KEY = `.${DATA_KEY}`\r\nconst DATA_API_KEY = '.data-api'\r\n\r\nconst Default = {\r\n  offset: 10,\r\n  method: 'auto',\r\n  target: ''\r\n}\r\n\r\nconst DefaultType = {\r\n  offset: 'number',\r\n  method: 'string',\r\n  target: '(string|element)'\r\n}\r\n\r\nconst EVENT_ACTIVATE = `activate${EVENT_KEY}`\r\nconst EVENT_SCROLL = `scroll${EVENT_KEY}`\r\nconst EVENT_LOAD_DATA_API = `load${EVENT_KEY}${DATA_API_KEY}`\r\n\r\nconst CLASS_NAME_DROPDOWN_ITEM = 'dropdown-item'\r\nconst CLASS_NAME_ACTIVE = 'active'\r\n\r\nconst SELECTOR_DATA_SPY = '[data-spy=\"scroll\"]'\r\nconst SELECTOR_NAV_LIST_GROUP = '.nav, .list-group'\r\nconst SELECTOR_NAV_LINKS = '.nav-link'\r\nconst SELECTOR_NAV_ITEMS = '.nav-item'\r\nconst SELECTOR_LIST_ITEMS = '.list-group-item'\r\nconst SELECTOR_DROPDOWN = '.dropdown'\r\nconst SELECTOR_DROPDOWN_TOGGLE = '.dropdown-toggle'\r\n\r\nconst METHOD_OFFSET = 'offset'\r\nconst METHOD_POSITION = 'position'\r\n\r\n/**\r\n * ------------------------------------------------------------------------\r\n * Class Definition\r\n * ------------------------------------------------------------------------\r\n */\r\n\r\nclass ScrollSpy {\r\n  constructor(element, config) {\r\n    this._element = element\r\n    this._scrollElement = element.tagName === 'BODY' ? window : element\r\n    this._config = this._getConfig(config)\r\n    this._selector = `${this._config.target} ${SELECTOR_NAV_LINKS},` +\r\n                          `${this._config.target} ${SELECTOR_LIST_ITEMS},` +\r\n                          `${this._config.target} .${CLASS_NAME_DROPDOWN_ITEM}`\r\n    this._offsets = []\r\n    this._targets = []\r\n    this._activeTarget = null\r\n    this._scrollHeight = 0\r\n\r\n    EventHandler.on(this._scrollElement, EVENT_SCROLL, event => this._process(event))\r\n\r\n    this.refresh()\r\n    this._process()\r\n\r\n    Data.setData(element, DATA_KEY, this)\r\n  }\r\n\r\n  // Getters\r\n\r\n  static get VERSION() {\r\n    return VERSION\r\n  }\r\n\r\n  static get Default() {\r\n    return Default\r\n  }\r\n\r\n  // Public\r\n\r\n  refresh() {\r\n    const autoMethod = this._scrollElement === this._scrollElement.window ?\r\n      METHOD_OFFSET :\r\n      METHOD_POSITION\r\n\r\n    const offsetMethod = this._config.method === 'auto' ?\r\n      autoMethod :\r\n      this._config.method\r\n\r\n    const offsetBase = offsetMethod === METHOD_POSITION ?\r\n      this._getScrollTop() :\r\n      0\r\n\r\n    this._offsets = []\r\n    this._targets = []\r\n\r\n    this._scrollHeight = this._getScrollHeight()\r\n\r\n    const targets = SelectorEngine.find(this._selector)\r\n\r\n    targets\r\n      .map(element => {\r\n        let target\r\n        const targetSelector = getSelectorFromElement(element)\r\n\r\n        if (targetSelector) {\r\n          target = SelectorEngine.findOne(targetSelector)\r\n        }\r\n\r\n        if (target) {\r\n          const targetBCR = target.getBoundingClientRect()\r\n          if (targetBCR.width || targetBCR.height) {\r\n            return [\r\n              Manipulator[offsetMethod](target).top + offsetBase,\r\n              targetSelector\r\n            ]\r\n          }\r\n        }\r\n\r\n        return null\r\n      })\r\n      .filter(item => item)\r\n      .sort((a, b) => a[0] - b[0])\r\n      .forEach(item => {\r\n        this._offsets.push(item[0])\r\n        this._targets.push(item[1])\r\n      })\r\n  }\r\n\r\n  dispose() {\r\n    Data.removeData(this._element, DATA_KEY)\r\n    EventHandler.off(this._scrollElement, EVENT_KEY)\r\n\r\n    this._element = null\r\n    this._scrollElement = null\r\n    this._config = null\r\n    this._selector = null\r\n    this._offsets = null\r\n    this._targets = null\r\n    this._activeTarget = null\r\n    this._scrollHeight = null\r\n  }\r\n\r\n  // Private\r\n\r\n  _getConfig(config) {\r\n    config = {\r\n      ...Default,\r\n      ...typeof config === 'object' && config ? config : {}\r\n    }\r\n\r\n    if (typeof config.target !== 'string' && isElement(config.target)) {\r\n      let { id } = config.target\r\n      if (!id) {\r\n        id = getUID(NAME)\r\n        config.target.id = id\r\n      }\r\n\r\n      config.target = `#${id}`\r\n    }\r\n\r\n    typeCheckConfig(NAME, config, DefaultType)\r\n\r\n    return config\r\n  }\r\n\r\n  _getScrollTop() {\r\n    return this._scrollElement === window ?\r\n      this._scrollElement.pageYOffset :\r\n      this._scrollElement.scrollTop\r\n  }\r\n\r\n  _getScrollHeight() {\r\n    return this._scrollElement.scrollHeight || Math.max(\r\n      document.body.scrollHeight,\r\n      document.documentElement.scrollHeight\r\n    )\r\n  }\r\n\r\n  _getOffsetHeight() {\r\n    return this._scrollElement === window ?\r\n      window.innerHeight :\r\n      this._scrollElement.getBoundingClientRect().height\r\n  }\r\n\r\n  _process() {\r\n    const scrollTop = this._getScrollTop() + this._config.offset\r\n    const scrollHeight = this._getScrollHeight()\r\n    const maxScroll = this._config.offset +\r\n      scrollHeight -\r\n      this._getOffsetHeight()\r\n\r\n    if (this._scrollHeight !== scrollHeight) {\r\n      this.refresh()\r\n    }\r\n\r\n    if (scrollTop >= maxScroll) {\r\n      const target = this._targets[this._targets.length - 1]\r\n\r\n      if (this._activeTarget !== target) {\r\n        this._activate(target)\r\n      }\r\n\r\n      return\r\n    }\r\n\r\n    if (this._activeTarget && scrollTop < this._offsets[0] && this._offsets[0] > 0) {\r\n      this._activeTarget = null\r\n      this._clear()\r\n      return\r\n    }\r\n\r\n    for (let i = this._offsets.length; i--;) {\r\n      const isActiveTarget = this._activeTarget !== this._targets[i] &&\r\n          scrollTop >= this._offsets[i] &&\r\n          (typeof this._offsets[i + 1] === 'undefined' ||\r\n              scrollTop < this._offsets[i + 1])\r\n\r\n      if (isActiveTarget) {\r\n        this._activate(this._targets[i])\r\n      }\r\n    }\r\n  }\r\n\r\n  _activate(target) {\r\n    this._activeTarget = target\r\n\r\n    this._clear()\r\n\r\n    const queries = this._selector.split(',')\r\n      .map(selector => `${selector}[data-target=\"${target}\"],${selector}[href=\"${target}\"]`)\r\n\r\n    const link = SelectorEngine.findOne(queries.join(','))\r\n\r\n    if (link.classList.contains(CLASS_NAME_DROPDOWN_ITEM)) {\r\n      SelectorEngine\r\n        .findOne(SELECTOR_DROPDOWN_TOGGLE, link.closest(SELECTOR_DROPDOWN))\r\n        .classList.add(CLASS_NAME_ACTIVE)\r\n\r\n      link.classList.add(CLASS_NAME_ACTIVE)\r\n    } else {\r\n      // Set triggered link as active\r\n      link.classList.add(CLASS_NAME_ACTIVE)\r\n\r\n      SelectorEngine\r\n        .parents(link, SELECTOR_NAV_LIST_GROUP)\r\n        .forEach(listGroup => {\r\n          // Set triggered links parents as active\r\n          // With both <ul> and <nav> markup a parent is the previous sibling of any nav ancestor\r\n          SelectorEngine.prev(listGroup, `${SELECTOR_NAV_LINKS}, ${SELECTOR_LIST_ITEMS}`)\r\n            .forEach(item => item.classList.add(CLASS_NAME_ACTIVE))\r\n\r\n          // Handle special case when .nav-link is inside .nav-item\r\n          SelectorEngine.prev(listGroup, SELECTOR_NAV_ITEMS)\r\n            .forEach(navItem => {\r\n              SelectorEngine.children(navItem, SELECTOR_NAV_LINKS)\r\n                .forEach(item => item.classList.add(CLASS_NAME_ACTIVE))\r\n            })\r\n        })\r\n    }\r\n\r\n    EventHandler.trigger(this._scrollElement, EVENT_ACTIVATE, {\r\n      relatedTarget: target\r\n    })\r\n  }\r\n\r\n  _clear() {\r\n    SelectorEngine.find(this._selector)\r\n      .filter(node => node.classList.contains(CLASS_NAME_ACTIVE))\r\n      .forEach(node => node.classList.remove(CLASS_NAME_ACTIVE))\r\n  }\r\n\r\n  // Static\r\n\r\n  static jQueryInterface(config) {\r\n    return this.each(function () {\r\n      let data = Data.getData(this, DATA_KEY)\r\n      const _config = typeof config === 'object' && config\r\n\r\n      if (!data) {\r\n        data = new ScrollSpy(this, _config)\r\n      }\r\n\r\n      if (typeof config === 'string') {\r\n        if (typeof data[config] === 'undefined') {\r\n          throw new TypeError(`No method named \"${config}\"`)\r\n        }\r\n\r\n        data[config]()\r\n      }\r\n    })\r\n  }\r\n\r\n  static getInstance(element) {\r\n    return Data.getData(element, DATA_KEY)\r\n  }\r\n}\r\n\r\n/**\r\n * ------------------------------------------------------------------------\r\n * Data Api implementation\r\n * ------------------------------------------------------------------------\r\n */\r\n\r\nEventHandler.on(window, EVENT_LOAD_DATA_API, () => {\r\n  SelectorEngine.find(SELECTOR_DATA_SPY)\r\n    .forEach(spy => new ScrollSpy(spy, Manipulator.getDataAttributes(spy)))\r\n})\r\n\r\nconst $ = getjQuery()\r\n\r\n/**\r\n * ------------------------------------------------------------------------\r\n * jQuery\r\n * ------------------------------------------------------------------------\r\n */\r\n/* istanbul ignore if */\r\nif ($) {\r\n  const JQUERY_NO_CONFLICT = $.fn[NAME]\r\n  $.fn[NAME] = ScrollSpy.jQueryInterface\r\n  $.fn[NAME].Constructor = ScrollSpy\r\n  $.fn[NAME].noConflict = () => {\r\n    $.fn[NAME] = JQUERY_NO_CONFLICT\r\n    return ScrollSpy.jQueryInterface\r\n  }\r\n}\r\n\r\nexport default ScrollSpy\r\n"],"names":["MAX_UID","toType","obj","undefined","toString","call","match","toLowerCase","getUID","prefix","Math","floor","random","document","getElementById","getSelector","element","selector","getAttribute","hrefAttr","trim","getSelectorFromElement","querySelector","isElement","nodeType","typeCheckConfig","componentName","config","configTypes","Object","keys","forEach","property","expectedTypes","value","valueType","RegExp","test","Error","toUpperCase","getjQuery","window","jQuery","body","hasAttribute","NAME","VERSION","DATA_KEY","EVENT_KEY","DATA_API_KEY","Default","offset","method","target","DefaultType","EVENT_ACTIVATE","EVENT_SCROLL","EVENT_LOAD_DATA_API","CLASS_NAME_DROPDOWN_ITEM","CLASS_NAME_ACTIVE","SELECTOR_DATA_SPY","SELECTOR_NAV_LIST_GROUP","SELECTOR_NAV_LINKS","SELECTOR_NAV_ITEMS","SELECTOR_LIST_ITEMS","SELECTOR_DROPDOWN","SELECTOR_DROPDOWN_TOGGLE","METHOD_OFFSET","METHOD_POSITION","ScrollSpy","_element","_scrollElement","tagName","_config","_getConfig","_selector","_offsets","_targets","_activeTarget","_scrollHeight","EventHandler","on","event","_process","refresh","Data","setData","autoMethod","offsetMethod","offsetBase","_getScrollTop","_getScrollHeight","targets","SelectorEngine","find","map","targetSelector","findOne","targetBCR","getBoundingClientRect","width","height","Manipulator","top","filter","item","sort","a","b","push","dispose","removeData","off","id","pageYOffset","scrollTop","scrollHeight","max","documentElement","_getOffsetHeight","innerHeight","maxScroll","length","_activate","_clear","i","isActiveTarget","queries","split","link","join","classList","contains","closest","add","parents","listGroup","prev","navItem","children","trigger","relatedTarget","node","remove","jQueryInterface","each","data","getData","TypeError","getInstance","spy","getDataAttributes","$","JQUERY_NO_CONFLICT","fn","Constructor","noConflict"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAA;;;;;;EAOA,IAAMA,OAAO,GAAG,OAAhB;;EAKA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,GAAG,EAAI;EACpB,MAAIA,GAAG,KAAK,IAAR,IAAgBA,GAAG,KAAKC,SAA5B,EAAuC;EACrC,gBAAUD,GAAV;EACD;;EAED,SAAO,GAAGE,QAAH,CAAYC,IAAZ,CAAiBH,GAAjB,EAAsBI,KAAtB,CAA4B,aAA5B,EAA2C,CAA3C,EAA8CC,WAA9C,EAAP;EACD,CAND;EAQA;;;;;;;EAMA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,MAAM,EAAI;EACvB,KAAG;EACDA,IAAAA,MAAM,IAAIC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBZ,OAA3B,CAAV;EACD,GAFD,QAESa,QAAQ,CAACC,cAAT,CAAwBL,MAAxB,CAFT;;EAIA,SAAOA,MAAP;EACD,CAND;;EAQA,IAAMM,WAAW,GAAG,SAAdA,WAAc,CAAAC,OAAO,EAAI;EAC7B,MAAIC,QAAQ,GAAGD,OAAO,CAACE,YAAR,CAAqB,aAArB,CAAf;;EAEA,MAAI,CAACD,QAAD,IAAaA,QAAQ,KAAK,GAA9B,EAAmC;EACjC,QAAME,QAAQ,GAAGH,OAAO,CAACE,YAAR,CAAqB,MAArB,CAAjB;EAEAD,IAAAA,QAAQ,GAAGE,QAAQ,IAAIA,QAAQ,KAAK,GAAzB,GAA+BA,QAAQ,CAACC,IAAT,EAA/B,GAAiD,IAA5D;EACD;;EAED,SAAOH,QAAP;EACD,CAVD;;EAYA,IAAMI,sBAAsB,GAAG,SAAzBA,sBAAyB,CAAAL,OAAO,EAAI;EACxC,MAAMC,QAAQ,GAAGF,WAAW,CAACC,OAAD,CAA5B;;EAEA,MAAIC,QAAJ,EAAc;EACZ,WAAOJ,QAAQ,CAACS,aAAT,CAAuBL,QAAvB,IAAmCA,QAAnC,GAA8C,IAArD;EACD;;EAED,SAAO,IAAP;EACD,CARD;;EA8CA,IAAMM,SAAS,GAAG,SAAZA,SAAY,CAAArB,GAAG;EAAA,SAAI,CAACA,GAAG,CAAC,CAAD,CAAH,IAAUA,GAAX,EAAgBsB,QAApB;EAAA,CAArB;;EAmBA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,aAAD,EAAgBC,MAAhB,EAAwBC,WAAxB,EAAwC;EAC9DC,EAAAA,MAAM,CAACC,IAAP,CAAYF,WAAZ,EACGG,OADH,CACW,UAAAC,QAAQ,EAAI;EACnB,QAAMC,aAAa,GAAGL,WAAW,CAACI,QAAD,CAAjC;EACA,QAAME,KAAK,GAAGP,MAAM,CAACK,QAAD,CAApB;EACA,QAAMG,SAAS,GAAGD,KAAK,IAAIX,SAAS,CAACW,KAAD,CAAlB,GAChB,SADgB,GAEhBjC,MAAM,CAACiC,KAAD,CAFR;;EAIA,QAAI,CAAC,IAAIE,MAAJ,CAAWH,aAAX,EAA0BI,IAA1B,CAA+BF,SAA/B,CAAL,EAAgD;EAC9C,YAAM,IAAIG,KAAJ,CACDZ,aAAa,CAACa,WAAd,EAAH,yBACWP,QADX,2BACuCG,SADvC,sCAEsBF,aAFtB,SADI,CAAN;EAID;EACF,GAdH;EAeD,CAhBD;;EA8DA,IAAMO,SAAS,GAAG,SAAZA,SAAY,GAAM;EAAA,gBACHC,MADG;EAAA,MACdC,MADc,WACdA,MADc;;EAGtB,MAAIA,MAAM,IAAI,CAAC7B,QAAQ,CAAC8B,IAAT,CAAcC,YAAd,CAA2B,gBAA3B,CAAf,EAA6D;EAC3D,WAAOF,MAAP;EACD;;EAED,SAAO,IAAP;EACD,CARD;;ECtJA;;;;;;EAMA,IAAMG,IAAI,GAAG,WAAb;EACA,IAAMC,OAAO,GAAG,OAAhB;EACA,IAAMC,QAAQ,GAAG,kBAAjB;EACA,IAAMC,SAAS,SAAOD,QAAtB;EACA,IAAME,YAAY,GAAG,WAArB;EAEA,IAAMC,OAAO,GAAG;EACdC,EAAAA,MAAM,EAAE,EADM;EAEdC,EAAAA,MAAM,EAAE,MAFM;EAGdC,EAAAA,MAAM,EAAE;EAHM,CAAhB;EAMA,IAAMC,WAAW,GAAG;EAClBH,EAAAA,MAAM,EAAE,QADU;EAElBC,EAAAA,MAAM,EAAE,QAFU;EAGlBC,EAAAA,MAAM,EAAE;EAHU,CAApB;EAMA,IAAME,cAAc,gBAAcP,SAAlC;EACA,IAAMQ,YAAY,cAAYR,SAA9B;EACA,IAAMS,mBAAmB,YAAUT,SAAV,GAAsBC,YAA/C;EAEA,IAAMS,wBAAwB,GAAG,eAAjC;EACA,IAAMC,iBAAiB,GAAG,QAA1B;EAEA,IAAMC,iBAAiB,GAAG,qBAA1B;EACA,IAAMC,uBAAuB,GAAG,mBAAhC;EACA,IAAMC,kBAAkB,GAAG,WAA3B;EACA,IAAMC,kBAAkB,GAAG,WAA3B;EACA,IAAMC,mBAAmB,GAAG,kBAA5B;EACA,IAAMC,iBAAiB,GAAG,WAA1B;EACA,IAAMC,wBAAwB,GAAG,kBAAjC;EAEA,IAAMC,aAAa,GAAG,QAAtB;EACA,IAAMC,eAAe,GAAG,UAAxB;EAEA;;;;;;MAMMC;EACJ,qBAAYrD,OAAZ,EAAqBW,MAArB,EAA6B;EAAA;;EAC3B,SAAK2C,QAAL,GAAgBtD,OAAhB;EACA,SAAKuD,cAAL,GAAsBvD,OAAO,CAACwD,OAAR,KAAoB,MAApB,GAA6B/B,MAA7B,GAAsCzB,OAA5D;EACA,SAAKyD,OAAL,GAAe,KAAKC,UAAL,CAAgB/C,MAAhB,CAAf;EACA,SAAKgD,SAAL,GAAoB,KAAKF,OAAL,CAAapB,MAAhB,SAA0BS,kBAA1B,UACQ,KAAKW,OAAL,CAAapB,MADrB,SAC+BW,mBAD/B,WAEQ,KAAKS,OAAL,CAAapB,MAFrB,UAEgCK,wBAFhC,CAAjB;EAGA,SAAKkB,QAAL,GAAgB,EAAhB;EACA,SAAKC,QAAL,GAAgB,EAAhB;EACA,SAAKC,aAAL,GAAqB,IAArB;EACA,SAAKC,aAAL,GAAqB,CAArB;EAEAC,IAAAA,YAAY,CAACC,EAAb,CAAgB,KAAKV,cAArB,EAAqCf,YAArC,EAAmD,UAAA0B,KAAK;EAAA,aAAI,KAAI,CAACC,QAAL,CAAcD,KAAd,CAAJ;EAAA,KAAxD;EAEA,SAAKE,OAAL;;EACA,SAAKD,QAAL;;EAEAE,IAAAA,IAAI,CAACC,OAAL,CAAatE,OAAb,EAAsB+B,QAAtB,EAAgC,IAAhC;EACD;;;;;EAYD;WAEAqC,UAAA,mBAAU;EAAA;;EACR,QAAMG,UAAU,GAAG,KAAKhB,cAAL,KAAwB,KAAKA,cAAL,CAAoB9B,MAA5C,GACjB0B,aADiB,GAEjBC,eAFF;EAIA,QAAMoB,YAAY,GAAG,KAAKf,OAAL,CAAarB,MAAb,KAAwB,MAAxB,GACnBmC,UADmB,GAEnB,KAAKd,OAAL,CAAarB,MAFf;EAIA,QAAMqC,UAAU,GAAGD,YAAY,KAAKpB,eAAjB,GACjB,KAAKsB,aAAL,EADiB,GAEjB,CAFF;EAIA,SAAKd,QAAL,GAAgB,EAAhB;EACA,SAAKC,QAAL,GAAgB,EAAhB;EAEA,SAAKE,aAAL,GAAqB,KAAKY,gBAAL,EAArB;EAEA,QAAMC,OAAO,GAAGC,cAAc,CAACC,IAAf,CAAoB,KAAKnB,SAAzB,CAAhB;EAEAiB,IAAAA,OAAO,CACJG,GADH,CACO,UAAA/E,OAAO,EAAI;EACd,UAAIqC,MAAJ;EACA,UAAM2C,cAAc,GAAG3E,sBAAsB,CAACL,OAAD,CAA7C;;EAEA,UAAIgF,cAAJ,EAAoB;EAClB3C,QAAAA,MAAM,GAAGwC,cAAc,CAACI,OAAf,CAAuBD,cAAvB,CAAT;EACD;;EAED,UAAI3C,MAAJ,EAAY;EACV,YAAM6C,SAAS,GAAG7C,MAAM,CAAC8C,qBAAP,EAAlB;;EACA,YAAID,SAAS,CAACE,KAAV,IAAmBF,SAAS,CAACG,MAAjC,EAAyC;EACvC,iBAAO,CACLC,WAAW,CAACd,YAAD,CAAX,CAA0BnC,MAA1B,EAAkCkD,GAAlC,GAAwCd,UADnC,EAELO,cAFK,CAAP;EAID;EACF;;EAED,aAAO,IAAP;EACD,KApBH,EAqBGQ,MArBH,CAqBU,UAAAC,IAAI;EAAA,aAAIA,IAAJ;EAAA,KArBd,EAsBGC,IAtBH,CAsBQ,UAACC,CAAD,EAAIC,CAAJ;EAAA,aAAUD,CAAC,CAAC,CAAD,CAAD,GAAOC,CAAC,CAAC,CAAD,CAAlB;EAAA,KAtBR,EAuBG7E,OAvBH,CAuBW,UAAA0E,IAAI,EAAI;EACf,MAAA,MAAI,CAAC7B,QAAL,CAAciC,IAAd,CAAmBJ,IAAI,CAAC,CAAD,CAAvB;;EACA,MAAA,MAAI,CAAC5B,QAAL,CAAcgC,IAAd,CAAmBJ,IAAI,CAAC,CAAD,CAAvB;EACD,KA1BH;EA2BD;;WAEDK,UAAA,mBAAU;EACRzB,IAAAA,IAAI,CAAC0B,UAAL,CAAgB,KAAKzC,QAArB,EAA+BvB,QAA/B;EACAiC,IAAAA,YAAY,CAACgC,GAAb,CAAiB,KAAKzC,cAAtB,EAAsCvB,SAAtC;EAEA,SAAKsB,QAAL,GAAgB,IAAhB;EACA,SAAKC,cAAL,GAAsB,IAAtB;EACA,SAAKE,OAAL,GAAe,IAAf;EACA,SAAKE,SAAL,GAAiB,IAAjB;EACA,SAAKC,QAAL,GAAgB,IAAhB;EACA,SAAKC,QAAL,GAAgB,IAAhB;EACA,SAAKC,aAAL,GAAqB,IAArB;EACA,SAAKC,aAAL,GAAqB,IAArB;EACD;;;WAIDL,aAAA,oBAAW/C,MAAX,EAAmB;EACjBA,IAAAA,MAAM,qCACDuB,OADC,GAED,OAAOvB,MAAP,KAAkB,QAAlB,IAA8BA,MAA9B,GAAuCA,MAAvC,GAAgD,EAF/C,CAAN;;EAKA,QAAI,OAAOA,MAAM,CAAC0B,MAAd,KAAyB,QAAzB,IAAqC9B,SAAS,CAACI,MAAM,CAAC0B,MAAR,CAAlD,EAAmE;EAAA,UAC3D4D,EAD2D,GACpDtF,MAAM,CAAC0B,MAD6C,CAC3D4D,EAD2D;;EAEjE,UAAI,CAACA,EAAL,EAAS;EACPA,QAAAA,EAAE,GAAGzG,MAAM,CAACqC,IAAD,CAAX;EACAlB,QAAAA,MAAM,CAAC0B,MAAP,CAAc4D,EAAd,GAAmBA,EAAnB;EACD;;EAEDtF,MAAAA,MAAM,CAAC0B,MAAP,SAAoB4D,EAApB;EACD;;EAEDxF,IAAAA,eAAe,CAACoB,IAAD,EAAOlB,MAAP,EAAe2B,WAAf,CAAf;EAEA,WAAO3B,MAAP;EACD;;WAED+D,gBAAA,yBAAgB;EACd,WAAO,KAAKnB,cAAL,KAAwB9B,MAAxB,GACL,KAAK8B,cAAL,CAAoB2C,WADf,GAEL,KAAK3C,cAAL,CAAoB4C,SAFtB;EAGD;;WAEDxB,mBAAA,4BAAmB;EACjB,WAAO,KAAKpB,cAAL,CAAoB6C,YAApB,IAAoC1G,IAAI,CAAC2G,GAAL,CACzCxG,QAAQ,CAAC8B,IAAT,CAAcyE,YAD2B,EAEzCvG,QAAQ,CAACyG,eAAT,CAAyBF,YAFgB,CAA3C;EAID;;WAEDG,mBAAA,4BAAmB;EACjB,WAAO,KAAKhD,cAAL,KAAwB9B,MAAxB,GACLA,MAAM,CAAC+E,WADF,GAEL,KAAKjD,cAAL,CAAoB4B,qBAApB,GAA4CE,MAF9C;EAGD;;WAEDlB,WAAA,oBAAW;EACT,QAAMgC,SAAS,GAAG,KAAKzB,aAAL,KAAuB,KAAKjB,OAAL,CAAatB,MAAtD;;EACA,QAAMiE,YAAY,GAAG,KAAKzB,gBAAL,EAArB;;EACA,QAAM8B,SAAS,GAAG,KAAKhD,OAAL,CAAatB,MAAb,GAChBiE,YADgB,GAEhB,KAAKG,gBAAL,EAFF;;EAIA,QAAI,KAAKxC,aAAL,KAAuBqC,YAA3B,EAAyC;EACvC,WAAKhC,OAAL;EACD;;EAED,QAAI+B,SAAS,IAAIM,SAAjB,EAA4B;EAC1B,UAAMpE,MAAM,GAAG,KAAKwB,QAAL,CAAc,KAAKA,QAAL,CAAc6C,MAAd,GAAuB,CAArC,CAAf;;EAEA,UAAI,KAAK5C,aAAL,KAAuBzB,MAA3B,EAAmC;EACjC,aAAKsE,SAAL,CAAetE,MAAf;EACD;;EAED;EACD;;EAED,QAAI,KAAKyB,aAAL,IAAsBqC,SAAS,GAAG,KAAKvC,QAAL,CAAc,CAAd,CAAlC,IAAsD,KAAKA,QAAL,CAAc,CAAd,IAAmB,CAA7E,EAAgF;EAC9E,WAAKE,aAAL,GAAqB,IAArB;;EACA,WAAK8C,MAAL;;EACA;EACD;;EAED,SAAK,IAAIC,CAAC,GAAG,KAAKjD,QAAL,CAAc8C,MAA3B,EAAmCG,CAAC,EAApC,GAAyC;EACvC,UAAMC,cAAc,GAAG,KAAKhD,aAAL,KAAuB,KAAKD,QAAL,CAAcgD,CAAd,CAAvB,IACnBV,SAAS,IAAI,KAAKvC,QAAL,CAAciD,CAAd,CADM,KAElB,OAAO,KAAKjD,QAAL,CAAciD,CAAC,GAAG,CAAlB,CAAP,KAAgC,WAAhC,IACGV,SAAS,GAAG,KAAKvC,QAAL,CAAciD,CAAC,GAAG,CAAlB,CAHG,CAAvB;;EAKA,UAAIC,cAAJ,EAAoB;EAClB,aAAKH,SAAL,CAAe,KAAK9C,QAAL,CAAcgD,CAAd,CAAf;EACD;EACF;EACF;;WAEDF,YAAA,mBAAUtE,MAAV,EAAkB;EAChB,SAAKyB,aAAL,GAAqBzB,MAArB;;EAEA,SAAKuE,MAAL;;EAEA,QAAMG,OAAO,GAAG,KAAKpD,SAAL,CAAeqD,KAAf,CAAqB,GAArB,EACbjC,GADa,CACT,UAAA9E,QAAQ;EAAA,aAAOA,QAAP,uBAAgCoC,MAAhC,YAA4CpC,QAA5C,gBAA8DoC,MAA9D;EAAA,KADC,CAAhB;;EAGA,QAAM4E,IAAI,GAAGpC,cAAc,CAACI,OAAf,CAAuB8B,OAAO,CAACG,IAAR,CAAa,GAAb,CAAvB,CAAb;;EAEA,QAAID,IAAI,CAACE,SAAL,CAAeC,QAAf,CAAwB1E,wBAAxB,CAAJ,EAAuD;EACrDmC,MAAAA,cAAc,CACXI,OADH,CACW/B,wBADX,EACqC+D,IAAI,CAACI,OAAL,CAAapE,iBAAb,CADrC,EAEGkE,SAFH,CAEaG,GAFb,CAEiB3E,iBAFjB;EAIAsE,MAAAA,IAAI,CAACE,SAAL,CAAeG,GAAf,CAAmB3E,iBAAnB;EACD,KAND,MAMO;EACL;EACAsE,MAAAA,IAAI,CAACE,SAAL,CAAeG,GAAf,CAAmB3E,iBAAnB;EAEAkC,MAAAA,cAAc,CACX0C,OADH,CACWN,IADX,EACiBpE,uBADjB,EAEG9B,OAFH,CAEW,UAAAyG,SAAS,EAAI;EACpB;EACA;EACA3C,QAAAA,cAAc,CAAC4C,IAAf,CAAoBD,SAApB,EAAkC1E,kBAAlC,UAAyDE,mBAAzD,EACGjC,OADH,CACW,UAAA0E,IAAI;EAAA,iBAAIA,IAAI,CAAC0B,SAAL,CAAeG,GAAf,CAAmB3E,iBAAnB,CAAJ;EAAA,SADf,EAHoB;;EAOpBkC,QAAAA,cAAc,CAAC4C,IAAf,CAAoBD,SAApB,EAA+BzE,kBAA/B,EACGhC,OADH,CACW,UAAA2G,OAAO,EAAI;EAClB7C,UAAAA,cAAc,CAAC8C,QAAf,CAAwBD,OAAxB,EAAiC5E,kBAAjC,EACG/B,OADH,CACW,UAAA0E,IAAI;EAAA,mBAAIA,IAAI,CAAC0B,SAAL,CAAeG,GAAf,CAAmB3E,iBAAnB,CAAJ;EAAA,WADf;EAED,SAJH;EAKD,OAdH;EAeD;;EAEDqB,IAAAA,YAAY,CAAC4D,OAAb,CAAqB,KAAKrE,cAA1B,EAA0ChB,cAA1C,EAA0D;EACxDsF,MAAAA,aAAa,EAAExF;EADyC,KAA1D;EAGD;;WAEDuE,SAAA,kBAAS;EACP/B,IAAAA,cAAc,CAACC,IAAf,CAAoB,KAAKnB,SAAzB,EACG6B,MADH,CACU,UAAAsC,IAAI;EAAA,aAAIA,IAAI,CAACX,SAAL,CAAeC,QAAf,CAAwBzE,iBAAxB,CAAJ;EAAA,KADd,EAEG5B,OAFH,CAEW,UAAA+G,IAAI;EAAA,aAAIA,IAAI,CAACX,SAAL,CAAeY,MAAf,CAAsBpF,iBAAtB,CAAJ;EAAA,KAFf;EAGD;;;cAIMqF,kBAAP,yBAAuBrH,MAAvB,EAA+B;EAC7B,WAAO,KAAKsH,IAAL,CAAU,YAAY;EAC3B,UAAIC,IAAI,GAAG7D,IAAI,CAAC8D,OAAL,CAAa,IAAb,EAAmBpG,QAAnB,CAAX;;EACA,UAAM0B,OAAO,GAAG,OAAO9C,MAAP,KAAkB,QAAlB,IAA8BA,MAA9C;;EAEA,UAAI,CAACuH,IAAL,EAAW;EACTA,QAAAA,IAAI,GAAG,IAAI7E,SAAJ,CAAc,IAAd,EAAoBI,OAApB,CAAP;EACD;;EAED,UAAI,OAAO9C,MAAP,KAAkB,QAAtB,EAAgC;EAC9B,YAAI,OAAOuH,IAAI,CAACvH,MAAD,CAAX,KAAwB,WAA5B,EAAyC;EACvC,gBAAM,IAAIyH,SAAJ,wBAAkCzH,MAAlC,QAAN;EACD;;EAEDuH,QAAAA,IAAI,CAACvH,MAAD,CAAJ;EACD;EACF,KAfM,CAAP;EAgBD;;cAEM0H,cAAP,qBAAmBrI,OAAnB,EAA4B;EAC1B,WAAOqE,IAAI,CAAC8D,OAAL,CAAanI,OAAb,EAAsB+B,QAAtB,CAAP;EACD;;;;0BAjOoB;EACnB,aAAOD,OAAP;EACD;;;0BAEoB;EACnB,aAAOI,OAAP;EACD;;;;;EA8NH;;;;;;;EAMA8B,YAAY,CAACC,EAAb,CAAgBxC,MAAhB,EAAwBgB,mBAAxB,EAA6C,YAAM;EACjDoC,EAAAA,cAAc,CAACC,IAAf,CAAoBlC,iBAApB,EACG7B,OADH,CACW,UAAAuH,GAAG;EAAA,WAAI,IAAIjF,SAAJ,CAAciF,GAAd,EAAmBhD,WAAW,CAACiD,iBAAZ,CAA8BD,GAA9B,CAAnB,CAAJ;EAAA,GADd;EAED,CAHD;EAKA,IAAME,CAAC,GAAGhH,SAAS,EAAnB;EAEA;;;;;;EAKA;;EACA,IAAIgH,CAAJ,EAAO;EACL,MAAMC,kBAAkB,GAAGD,CAAC,CAACE,EAAF,CAAK7G,IAAL,CAA3B;EACA2G,EAAAA,CAAC,CAACE,EAAF,CAAK7G,IAAL,IAAawB,SAAS,CAAC2E,eAAvB;EACAQ,EAAAA,CAAC,CAACE,EAAF,CAAK7G,IAAL,EAAW8G,WAAX,GAAyBtF,SAAzB;;EACAmF,EAAAA,CAAC,CAACE,EAAF,CAAK7G,IAAL,EAAW+G,UAAX,GAAwB,YAAM;EAC5BJ,IAAAA,CAAC,CAACE,EAAF,CAAK7G,IAAL,IAAa4G,kBAAb;EACA,WAAOpF,SAAS,CAAC2E,eAAjB;EACD,GAHD;EAID;;;;;;;;"}