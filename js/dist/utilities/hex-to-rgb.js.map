{"version":3,"sources":["../../src/utilities/hex-to-rgb.js"],"names":["hexToRgb","color","Error","hex","match","r","g","b","length","parseInt","substring"],"mappings":"AAAA;;;;;;;AAOA;AACA,IAAMA,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AAC1B,MAAI,OAAOA,KAAP,KAAiB,WAArB,EAAkC;AAChC,UAAM,IAAIC,KAAJ,CAAU,0BAAV,CAAN;AACD;;AACD,MAAMC,GAAG,GAAGF,KAAK,CAACG,KAAN,CAAY,0BAAZ,CAAZ;;AACA,MAAI,CAACD,GAAL,EAAU;AACR,UAAM,IAAID,KAAJ,CAAaD,KAAb,+BAAN;AACD;;AACD,MAAII,CAAJ;AACA,MAAIC,CAAJ;AACA,MAAIC,CAAJ;;AACA,MAAIN,KAAK,CAACO,MAAN,KAAiB,CAArB,EAAwB;AACtBH,IAAAA,CAAC,GAAGI,QAAQ,CAACR,KAAK,CAACS,SAAN,CAAgB,CAAhB,EAAmB,CAAnB,CAAD,EAAwB,EAAxB,CAAZ;AACAJ,IAAAA,CAAC,GAAGG,QAAQ,CAACR,KAAK,CAACS,SAAN,CAAgB,CAAhB,EAAmB,CAAnB,CAAD,EAAwB,EAAxB,CAAZ;AACAH,IAAAA,CAAC,GAAGE,QAAQ,CAACR,KAAK,CAACS,SAAN,CAAgB,CAAhB,EAAmB,CAAnB,CAAD,EAAwB,EAAxB,CAAZ;AACD,GAJD,MAIO;AACLL,IAAAA,CAAC,GAAGI,QAAQ,CAACR,KAAK,CAACS,SAAN,CAAgB,CAAhB,EAAmB,CAAnB,CAAD,EAAwB,EAAxB,CAAZ;AACAJ,IAAAA,CAAC,GAAGG,QAAQ,CAACR,KAAK,CAACS,SAAN,CAAgB,CAAhB,EAAmB,CAAnB,CAAD,EAAwB,EAAxB,CAAZ;AACAH,IAAAA,CAAC,GAAGE,QAAQ,CAACR,KAAK,CAACS,SAAN,CAAgB,CAAhB,EAAmB,CAAnB,CAAD,EAAwB,EAAxB,CAAZ;AACD;;AAED,mBAAeL,CAAf,UAAqBC,CAArB,UAA2BC,CAA3B;AACD,CAtBD","sourcesContent":["/**\r\n * --------------------------------------------------------------------------\r\n * CoreUI Utilities (v2.0.14): hex-to-rgb.js\r\n * Licensed under MIT (https://coreui.io/license)\r\n * --------------------------------------------------------------------------\r\n */\r\n\r\n/* eslint-disable no-magic-numbers */\r\nconst hexToRgb = (color) => {\r\n  if (typeof color === 'undefined') {\r\n    throw new Error('Hex color is not defined')\r\n  }\r\n  const hex = color.match(/^#(?:[0-9a-f]{3}){1,2}$/i)\r\n  if (!hex) {\r\n    throw new Error(`${color} is not a valid hex color`)\r\n  }\r\n  let r\r\n  let g\r\n  let b\r\n  if (color.length === 7) {\r\n    r = parseInt(color.substring(1, 3), 16)\r\n    g = parseInt(color.substring(3, 5), 16)\r\n    b = parseInt(color.substring(5, 7), 16)\r\n  } else {\r\n    r = parseInt(color.substring(1, 2), 16)\r\n    g = parseInt(color.substring(2, 3), 16)\r\n    b = parseInt(color.substring(3, 5), 16)\r\n  }\r\n\r\n  return `rgba(${r}, ${g}, ${b})`\r\n}\r\n\r\nexport { hexToRgb }\r\n"],"file":"hex-to-rgb.js"}